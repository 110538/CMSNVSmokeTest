<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="49" tokens="205">
      <file line="158"
            path="C:\Users\chaitanya\Desktop\changed Code\AMCSmokeTestNew\src\main\java\com\testBase\test\ApiUtil.java"/>
      <file line="404"
            path="C:\Users\chaitanya\Desktop\changed Code\AMCSmokeTestNew\src\main\java\com\testBase\test\ApiUtil.java"/>
      <codefragment><![CDATA[					HttpResponse response = client.execute(request);

					//logStep("Execution Completed and reading response now");

					BufferedReader rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));

					//logStep("Verify Status code in response");

					if (response.getStatusLine().getStatusCode() != 200) {

						RuntimeException error = new RuntimeException(

								"Failed : HTTP error code : " + response.getStatusLine().getStatusCode());

						System.out.println(error);

						//logStep(error.toString());

						throw new RuntimeException(
								"Failed : HTTP error code : " + response.getStatusLine().getStatusCode());
					} else {

						String line = "";

						while ((line = rd.readLine()) != null) {

							textView_1.append(line);

						}
						if (textView_1.toString().contains("xml")) {

							text1 = convertxmltoJson(textView_1.toString());

						} else if (!textView_1.toString().contains("xml")) {

							jsonObj = new JSONObject();

							text1 = textView_1.toString();

							if (text1.startsWith("[")) {

								textView_1.deleteCharAt(0);

								textView_1.deleteCharAt(textView_1.length() - 1);

								text1 = textView_1.toString();
							}

							System.out.println("response  is : =========" + text1.toString());]]></codefragment>
   </duplication>
   <duplication lines="44" tokens="117">
      <file line="226"
            path="C:\Users\chaitanya\Desktop\changed Code\AMCSmokeTestNew\src\main\java\com\testBase\test\ApiUtil.java"/>
      <file line="477"
            path="C:\Users\chaitanya\Desktop\changed Code\AMCSmokeTestNew\src\main\java\com\testBase\test\ApiUtil.java"/>
      <codefragment><![CDATA[			}

			// Reads the WOPData based the WOP sheetname
			// Reads the MPData bases on the MP sheetname

			if (finalApiType == finalApiCount) {

				if (sheetname.contains("WOP")) {

					sheetname = "wopData";

					sourceJsonObj = wopJsonObj;

				} else if (sheetname.contains("MP")) {

					sheetname = "mpData";

					sourceJsonObj = mpJsonObj;
				}

				excelUtils.readingexcelFiles(sheetname);

				dataBook = excelUtils.getDataFromExcel(ExcelUtils.workbook, sheetname);

				XSSFSheet sheet = ExcelUtils.workbook.getSheet(sheetname);

				int rowCount = sheet.getPhysicalNumberOfRows();

				for (int i = 1; i <= rowCount - 1; i++) {

					// Calling the getValue Method to Read the WOPData
					// Calling the getValue Method to Read the MPData

					getValue(sheetname, dataBook[i][3].toString());

				}
			}

			return jsonObj;
		}

		// Clearing the JSon Object

		public void clearJSon() {]]></codefragment>
   </duplication>
</pmd-cpd>