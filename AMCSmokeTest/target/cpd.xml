<?xml version="1.0" encoding="UTF-8"?>
<pmd-cpd>
   <duplication lines="27" tokens="124">
      <file line="672"
            path="C:\Users\chaitanya\eclipse-workspace\AMCSmokeTest\src\main\java\com\cmstestbase\test\CMSTestBase.java"/>
      <file line="918"
            path="C:\Users\chaitanya\eclipse-workspace\AMCSmokeTest\src\main\java\com\cmstestbase\test\CMSTestBase.java"/>
      <codefragment><![CDATA[					String line = "";

					while ((line = rd.readLine()) != null) {

						textView_1.append(line);

					}
					if (textView_1.toString().contains("xml")) {

						text1 = convertxmltoJson(textView_1.toString());

					} else if (!textView_1.toString().contains("xml")) {

						jsonObj = new JSONObject();

						text1 = textView_1.toString();

						if (text1.startsWith("[")) {

							textView_1.deleteCharAt(0);

							textView_1.deleteCharAt(textView_1.length() - 1);

							text1 = textView_1.toString();
						}

						System.out.println("response  is : =========" + text1.toString());]]></codefragment>
   </duplication>
   <duplication lines="44" tokens="109">
      <file line="718"
            path="C:\Users\chaitanya\eclipse-workspace\AMCSmokeTest\src\main\java\com\cmstestbase\test\CMSTestBase.java"/>
      <file line="969"
            path="C:\Users\chaitanya\eclipse-workspace\AMCSmokeTest\src\main\java\com\cmstestbase\test\CMSTestBase.java"/>
      <codefragment><![CDATA[		}

		// Reads the WOPData based the WOP sheetname
		// Reads the MPData bases on the MP sheetname

		if (finalApiType == finalApiCount) {

			if (sheetname.contains("WOP")) {

				sheetname = "wopData";

				sourceJsonObj = wopJsonObj;

			} else if (sheetname.contains("MP")) {

				sheetname = "mpData";

				sourceJsonObj = mpJsonObj;
			}

			readingexcelFiles(sheetname);

			dataBook = getDataFromExcel(workbook, sheetname);

			XSSFSheet sheet = workbook.getSheet(sheetname);

			int rowCount = sheet.getPhysicalNumberOfRows();

			for (int i = 1; i <= rowCount - 1; i++) {

				// Calling the getValue Method to Read the WOPData
				// Calling the getValue Method to Read the MPData

				getValue(sheetname, dataBook[i][3].toString());

			}
		}

		return jsonObj;
	}

	// Clearing the JSon Object

	public void clearJSon() {]]></codefragment>
   </duplication>
</pmd-cpd>